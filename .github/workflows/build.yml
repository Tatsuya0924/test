name: Build and Analyze with SonarCloud

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  pull-requests: write # SonarCloud の PR デコレーション用

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest

    steps:
      # 1. リポジトリのコードをチェックアウト
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # 全履歴をクローンして解析精度を向上

      # 2. 必要な JDK のセットアップ
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'zulu' # 他のディストリビューションも利用可能

      # 3. SonarQube のキャッシュ
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # 4. Maven のキャッシュ
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # 5. Build and analyze
      - name: Build and analyze with coverage
        working-directory: textbook/ドキュメント/NetBeansProjects/test # プロジェクトのルートディレクトリを指定
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.projectKey=Tatsuya0924_test \
          -Dsonar.organization=tatsuya0924 \
          -Dsonar.java.binaries=target/classes \
          -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
